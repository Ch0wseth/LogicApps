name: Update Logic App Workflow

on:
  push:
    paths:
      - 'workflows/workflow.json'
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to update'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod

env:
  AZURE_RESOURCE_GROUP_DEV: rg-logicapp-dev
  AZURE_RESOURCE_GROUP_PROD: rg-logicapp-prod
  LOGIC_APP_NAME_DEV: logicapp-webhook-dev
  LOGIC_APP_NAME_PROD: logicapp-webhook-prod

jobs:
  validate-workflow:
    runs-on: ubuntu-latest
    name: Validate Workflow JSON
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Validate JSON syntax
      run: |
        echo "üîç Validating workflow JSON syntax..."
        cat workflows/workflow.json | jq . > /dev/null
        echo "‚úÖ Workflow JSON syntax is valid"
    
    - name: Check required fields
      run: |
        echo "üîç Checking workflow structure..."
        jq -e '.definition.triggers' workflows/workflow.json > /dev/null
        jq -e '.definition.actions' workflows/workflow.json > /dev/null
        echo "‚úÖ Workflow structure is valid"

  update-dev:
    runs-on: ubuntu-latest
    name: Update Dev Workflow
    needs: validate-workflow
    if: github.ref == 'refs/heads/develop' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Update Logic App Workflow
      run: |
        echo "üîÑ Updating Dev Logic App workflow..."
        
        # Update the Logic App workflow definition
        az logic workflow update \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP_DEV }} \
          --name ${{ env.LOGIC_APP_NAME_DEV }} \
          --definition @workflows/workflow.json
        
        echo "‚úÖ Dev workflow updated successfully"
    
    - name: Test Updated Workflow
      run: |
        echo "üß™ Testing updated workflow..."
        
        # Wait for Logic App to be ready (increased wait time)
        echo "‚è≥ Waiting for Logic App to be ready..."
        sleep 45
        
        # Get trigger URL
        TRIGGER_URL=$(az rest --method post \
          --url "https://management.azure.com/subscriptions/1358ce15-fec5-4e94-847b-13cd93b106fb/resourceGroups/${{ env.AZURE_RESOURCE_GROUP_DEV }}/providers/Microsoft.Logic/workflows/${{ env.LOGIC_APP_NAME_DEV }}/triggers/manual/listCallbackUrl?api-version=2016-06-01" \
          --query "value" --output tsv)
        
        echo "üåê Trigger URL: $TRIGGER_URL"
        
        # Test 1: Default action
        echo "Testing default action..."
        curl -X POST "$TRIGGER_URL" \
          -H "Content-Type: application/json" \
          -d '{"message":"Test default action"}' \
          --fail --show-error -w "HTTP Status: %{http_code}\n" || echo "Default action test failed with status $?"
        
        # Test 2: Ping action
        echo "Testing ping action..."
        curl -X POST "$TRIGGER_URL" \
          -H "Content-Type: application/json" \
          -d '{"action":"ping"}' \
          --fail --show-error -w "HTTP Status: %{http_code}\n" || echo "Ping action test failed with status $?"
        
        # Test 3: Echo action
        echo "Testing echo action..."
        curl -X POST "$TRIGGER_URL" \
          -H "Content-Type: application/json" \
          -d '{"action":"echo","message":"Hello from GitHub Actions!"}' \
          --fail --show-error -w "HTTP Status: %{http_code}\n" || echo "Echo action test failed with status $?"
        
        # Test 4: Timestamp action (v2.0)
        echo "Testing timestamp action..."
        curl -X POST "$TRIGGER_URL" \
          -H "Content-Type: application/json" \
          -d '{"action":"timestamp"}' \
          --fail --show-error -w "HTTP Status: %{http_code}\n" || echo "Timestamp action test failed with status $?"
        
        # Test 5: Info action (v2.0)
        echo "Testing info action..."
        curl -X POST "$TRIGGER_URL" \
          -H "Content-Type: application/json" \
          -d '{"action":"info"}' \
          --fail --show-error -w "HTTP Status: %{http_code}\n" || echo "Info action test failed with status $?"
        
        echo "‚úÖ All workflow v2.0 tests passed!"

  update-prod:
    runs-on: ubuntu-latest
    name: Update Prod Workflow
    needs: validate-workflow
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod')
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Update Logic App Workflow
      run: |
        echo "üöÄ Updating Prod Logic App workflow..."
        
        # Update the Logic App workflow definition
        az logic workflow update \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP_PROD }} \
          --name ${{ env.LOGIC_APP_NAME_PROD }} \
          --definition @workflows/workflow.json
        
        echo "‚úÖ Prod workflow updated successfully"
    
    - name: Verify Logic App Status
      run: |
        echo "üîç Verifying Logic App status..."
        
        # Check Logic App status
        STATUS=$(az logic workflow show \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP_PROD }} \
          --name ${{ env.LOGIC_APP_NAME_PROD }} \
          --query "state" --output tsv)
        
        echo "Logic App Status: $STATUS"
        
        if [ "$STATUS" != "Enabled" ]; then
          echo "‚ö†Ô∏è Logic App is not enabled, attempting to enable..."
          az logic workflow update \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP_PROD }} \
            --name ${{ env.LOGIC_APP_NAME_PROD }} \
            --state Enabled
          echo "‚úÖ Logic App enabled"
        else
          echo "‚úÖ Logic App is already enabled"
        fi
    
    - name: Test Production Workflow
      run: |
        echo "üß™ Testing production workflow..."
        
        # Wait for Logic App to be ready (increased wait time for production)
        echo "‚è≥ Waiting for Logic App to be ready..."
        sleep 60
        
        # Get trigger URL
        echo "üîó Getting trigger URL..."
        TRIGGER_URL=$(az rest --method post \
          --url "https://management.azure.com/subscriptions/1358ce15-fec5-4e94-847b-13cd93b106fb/resourceGroups/${{ env.AZURE_RESOURCE_GROUP_PROD }}/providers/Microsoft.Logic/workflows/${{ env.LOGIC_APP_NAME_PROD }}/triggers/manual/listCallbackUrl?api-version=2016-06-01" \
          --query "value" --output tsv)
        
        echo "üåê Production URL: $TRIGGER_URL"
        
        # Function to test with retry
        test_with_retry() {
          local action=$1
          local data=$2
          local max_retries=3
          local retry_count=0
          
          while [ $retry_count -lt $max_retries ]; do
            echo "Testing $action (attempt $((retry_count + 1))/$max_retries)..."
            
            if curl -X POST "$TRIGGER_URL" \
              -H "Content-Type: application/json" \
              -d "$data" \
              --fail --silent --show-error -w "HTTP Status: %{http_code}\n"; then
              echo "‚úÖ $action test successful"
              return 0
            else
              echo "‚ùå $action test failed (HTTP $?)"
              retry_count=$((retry_count + 1))
              if [ $retry_count -lt $max_retries ]; then
                echo "‚è≥ Waiting 30 seconds before retry..."
                sleep 30
              fi
            fi
          done
          
          echo "‚ö†Ô∏è $action test failed after $max_retries attempts"
          return 1
        }
        
        # Test production workflow v2.0 with retry logic
        test_with_retry "ping" '{"action":"ping"}'
        test_with_retry "timestamp" '{"action":"timestamp"}'
        
        echo "‚úÖ Production workflow v2.0 testing completed"